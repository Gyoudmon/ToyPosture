#lang scribble/base

@require{literacy.rkt}

@;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@handbook-story{需求分析}

相对于一般的文化类和艺体类校外教育，现阶段STEAM类校外教育最显著的特点是实验驱动、模型作品导向。
实施方式包括在机构内部开设主题班、以社团课甚至主修课的形式走进校园以弥补义务教育科学教育的缺失、在城市公共空间开展科学秀表演以吸引学生。
无论是哪一种情形，每次课都需要消耗大量的实验器材、花费大量时间来准备材料，且由于学生的年龄通常较小因而缺乏成本观念，经常导致大量实验材料的浪费。
因此，本系统在设计时就会尝试解决上述问题。

@handbook-scenario{场景建模}

一次常规课或活动的典型流程如下：教研老师研课、规划实验材料→教师讨论授课内容、流程和材料→教师提交材料购买清单→负责人审批、下单
→仓库管理员收单、登记入库→教师验证可行性→教学老师课前备材、运输到授课地点→教学老师授课、带学生做实验和项目作品→教学老师善后、回收可再利用的材料→仓库管理员清点库存。

对于一些特殊课程，如项目制探究课程，教研老师在研课时就要先验证可行性；学生课上也有更多的主动权在现场挑选未列在清单里的材料。

据此初步归纳出领域模型的参与者和他们的主要责任：
@itemlist[
 @item{@deftech{教研老师(Teaching-Research Staff)}： 研发新课程、规划实验材料。}
 @item{@deftech{教学老师(Lecturer)}： 确定上课方案(内容、流程、材料)，准备、回收材料，授课，带学生做实验和项目作品。}
 @item{@deftech{学生(Student)}： 上课，与教学老师、同学一起做实验、项目作品。}
 @item{@deftech{主管(Manager)}： 审核材料的购买清单，下单购买。}
 @item{@deftech{仓库管理员(Storage Keeper)}： 成本核算、收货并登记入库，清点库存。}
 ]@tamer-figure["ucd:domain" "领域用例图"]{@image["stone/vsdx/ucd_domain.png" #:scale 0.32]}

可得与之对应的领域模型用例图（@tamer-figure-ref{ucd:domain}）。其中材料商家完全不可控，故不在此列出。
此外，教研老师可以适当放宽成本做更为精细的实验和模型充当范例、教具；
教学老师也可以根据自己的风格和特长定制自己的上课方案，这也可能产生新实验或新作品，但规划的材料成本仍不宜太高。

本项目是关于实验物品管理的信息系统，课程设计不属于此系统的研究对象，但我们可以做个简单假设：
课程研发过程本身已经模块化，设计新课程、实验和作品时可以做到对已有实验和作品所含模块的简单组合。
这个假设对于现阶段的 STEM 教育来说过于理想，但即使无法达到预期，该假设也只是退化为模块化程度最低的情形。
也即，每一个实验或作品的可组合模块数为零，所有材料都是零碎材料；
或者每一个实验或作品自身构成一个独立模块，但在组合成新实验或作品时仍可能浪费大量材料。

于是，可通过本系统解决的部分领域问题可归纳为如下需求：
@itemlist[
 @item{新建、浏览、更新、删除单个材料的信息}
 @item{新建、浏览、更新、删除材料模块,统一管理一组材料}
 @item{新建、浏览、更新、删除授课方案,统一管理一组模块}
 @item{新建、浏览、更新、删除课程,统一管理一组方案}
 @item{浏览材料所属模块、案例(包括课程、方案、活动等)}
 @item{核算项目成本,在必要时提供选材建议}
 @item{快速定位材料存放位置}
 @item{处理死链接}
]
为帮助提高课程研发的模块化程度,可添加如下扩展需求以合理精细化模块粒度：
@itemlist[
 @item{根据公共材料的比例拆分旧模块、提炼新模块}
 @item{合并性质相似的模块,去除重复模块}
]
@tamer-figure["ucd:research" "教研用例图"]{@image["stone/vsdx/ucd_research.png" #:scale 0.36]}
@tamer-figure["ucd:teach" "教学用例图"]{@image["stone/vsdx/ucd_teach.png" #:scale 0.36]}
有了以上对参与者和需求的初步分析,去掉与本系统无关的部分,可得到两个主用例图,
分别对应教研模型（@tamer-figure-ref{ucd:research}）和教学模型(@tamer-figure-ref{ucd:teach})。
这两个模型有诸多共性,限于篇幅,这里仅挑选其中的一两个用例详细说明。

@handbook-action{用例举例: 规划材料}

@uc-exmaple[(list "用例"         "规划材料")
            (list "主要参与者"    "教研(学)老师")
            (list "用例目标"      "规划完成待做实验或作品的全部材料,并整理成材料清单")
            (list "前置条件"      "教师已对课程目标有充分理解,并对待做实验或作品有过一定的模块化分析")
            (list "触发器"        "教师决定现在提交新课程或方案")
            (list "场景"          @itemlist[#:style 'ordered
                                          @item{研发新课过程中,设计了一个未经尝试的实验、未有先例的目标作品的可行性}
                                          @item{教研讨论过程中,教学老师根据自己的特点决定更改授课方案}
                                          @item{教学老师在授课时受到学生启发,课后打算给其他班的同学设计新的实验内容、目标作品}])
            (list "异常"          @itemlist[#:style 'ordered
                                          @item{实验或作品过于新颖,已有项目中没有任何可借鉴的选材方案}
                                          @item{选材成本过高,大班教学不划算}
                                          @item{材料有一定危险性,或被当地法律法规禁用}
                                          @item{材料比较罕见,卖家已经破产倒闭了}])
            (list "优先级"        "高")
            (list "什么时候可用"   "第一次迭代")
            (list "使用频率"       "高")
            (list "参与者通道"     "桌面接口、浏览器接口")
            (list "次要参与者"     "其他老师")
            (list "次要参与者通道"  "面对面沟通")
            (list "已知问题"       @itemlist[
                                         @item{如何保证选材方案不外泄？}
                                          @item{是否需要配备基于角色的访问控制？}])]

@handbook-action{用例举例: 准备材料}

@uc-exmaple[(list "用例"         "准备材料")
            (list "主要参与者"    "教研(学)老师")
            (list "用例目标"      "准备好待做实验或作品的全部材料")
            (list "前置条件"      "已完成材料规划,库存不足材料也已登记入库")
            (list "触发器"        "教师决定现在开始验证可行性、制作范例成品或半成品")
            (list "场景"          @itemlist[#:style 'ordered
                                          @item{研发新课过程中,验证一个未经尝试的实验、未有先例的目标作品的可行性}
                                          @item{教研讨论过程中,教学老师验证自己独特授课方案的可行性}
                                          @item{授课之前,教学老师验证自己从学生那获得启发而设想的新实验、作品的可行性}])
            (list "异常"          @itemlist[#:style 'ordered
                                          @item{材料过于琐碎,备材时间过长}
                                          @item{因库存未及时清点,所需材料不够用}
                                          @item{因教学老师未及时善后,所需材料不在它本来的位置}
                                          @item{所需材料存放位置未登记,或登记不清晰}])
            (list "优先级"       "高")
            (list "什么时候可用"  "第一次迭代")
            (list "使用频率"      "高")
            (list "参与者通道"     "桌面接口、浏览器接口")
            (list "次要参与者"     "其他老师")
            (list "次要参与者通道"  "面对面沟通")
            (list "已知问题"       @itemlist[
                                         @item{如何实时获知材料的实际位置?}
                                          @item{零碎材料(如粉末状固体、木屑等)如何高效管理?}])]

@handbook-scenario{分析类建模}

通过从以上用例模型中抽取出一系列跟需求有关的名词,我们就可以进一步定义潜在的分析类。
在本系统中,一个名词是否可以用作分析类,可以参考如下六个特征纬度来分析：

@itemlist[#:style 'ordered
 @item{保留的信息。系统功能的发挥依赖分析类的信息。}
 @item{需要的服务。分析类必须具有一系列操作以修改自身属性。}
 @item{多属性。只有一个属性的分析类有用,但最好作为其他分析类的属性出现。}
 @item{共同属性。分析类的多个属性应当对其所有对象都适用。}
 @item{共同操作。分析类的多个操作应当对其所有对象都有效。}
 @item{需求必须。存在于问题空间的外部实体,如果它们总能接受或产生对解法空间有用的信息。}
]

由此得到本系统的分析类判定表(予以采纳的名词才有类名)：

@ac-table[(list "教研老师"   "外部实体" "3，4，5，6"      "-")
          (list "教学老师"   "外部实体" "3，4，5，6"      "-")
          (list "主管"      "外部实体" "3，4，5，6"      "-")
          (list "仓库管理员" "外部实体" "3，4，5，6"      "-")
          (list "案例"      "内部实体" "1，2，3，4，5，6" "-")
          (list "课程"      "内部实体" "1，2，3，4，5，6" "Course")
          (list "活动"      "内部实体" "1，2，3，4，5，6" "-")
          (list "方案"      "管理单元" "1，2，3，4，5，6" "Solution")
          (list "实验"      "内部实体" "1，2，3，4，5，6" "Experiment")
          (list "作品"      "内部实体" "1，2，3，4，5，6" "Artwork")
          (list "模块"      "管理单元" "1，2，3，4，5，6" "Module")
          (list "材料"      "内部实体" "1，2，3，4，5，6" "Apparatus")
          (list "清单"      "内部实体" "1，2，3，4，5，6" "Order")
          (list "成本"      "内部实体" "1，2，5，6"       "-")
          (list "链接"      "内部实体" "1，2，5，6"       "-")
          (list "位置"      "内部实体" "1，2，5，6"       "-")
          (list "购物系统"   "外部结构" "1，2，3，4，5，6" "-")
          (list "搜索系统"   "外部结构" "1，2，3，4，5，6" "-")
          (list "系统界面"   "边界结构" "1，2，3，4，5，6" "Frame")
          (list "存储系统"   "外部结构" "1，2，3，4，5，6" "Database")
          (list "存储空间"   "位置"    "1，2，3，4，5，6" "Storage")
          (list "创建"      "控制事件" "2"               "-")
          (list "更新"      "控制事件" "2"               "-")
          (list "浏览"      "控制事件" "2"               "-")
          (list "删除"      "控制事件" "2"               "-")
          (list "移动"      "控制事件" "1，2，3，4，5，6" "-")]

上表并没有细致地列出所有名词，且根据不同的设计考虑各名词有不同的采纳标准。
这里谈几个典型的分析考虑：

@itemlist[
  @item{在比较粗放的机构里，一人扮演多个角色，系统可能就是一个Excel工作簿，
        没有基于角色的访问控制系统，谁来操作面对面讨论，或者干脆交给惰性来决定。
        在这种情况下，角色就没有必要；反过来，在一个组织结构比较成熟的机构里，
        那些角色显然是有意义的（至少可以提供和修改“用户名”、“登陆密码”、“控制权限”等信息），
        应当被采纳为分析类。}
                   
  @item{理论上说，购物系统和搜索系统都可以集成到本系统中，以便智能筛选和提供实时信息。
        比如，自动抓取STEAM类网站上的同类项目信息；自动定位购物网站中性价比最高的商家并提供购买按钮等。
        但这个系统实现复杂，极大的增加了与其他系统的耦合，但却未必能更好地必解决业务问题。}

  @item{课程是本系统的核心概念，方案是教学老师视角的课程，
        活动是课程或方案的特殊实施方式，案例是课程或方案的同义词。
        因此本系统只关注课程和方案。}

  @item{成本、链接、位置都是单属性对象，应当作用材料的属性而不另外构成分析类。
        为解决材料位置的实时性问题，后续版本可能会将其采纳为分析类。}

  @item{存储空间既包括一般仓库，也包括实验室/教室内部可以长期存放物品的空间。}

  @item{增删查改这类对于数据的控制事件均为简单操作，不必专门采纳为分析类。}
  
  @item{“移动”是领域问题，指代实验耗材位置的变动，既有人工操作，也有信息化同步。
        但信息化同步过程比较简单，不必专门采纳为分析类。}
]

有了分析类，我们可以进一步给分析类归类，构成分析包。
不难得出，本系统可粗略归纳为两个大的分析包，或者说两大子系统：

@itemlist[
 @item{@deftech{材料采购包}： 涵盖从“规划材料”到“下单购买”用例的活动。}
 @item{@deftech{存储管理包}： 涵盖从“选择材料”到“清点库存”用例的活动。}
]

接下来以存储管理子系统中的部分用例来说明分析类在用例细化过程中的作用。
@tamer-figure["cd:store" "“材料登记库存”分析类图"]{@image["stone/vsdx/cd_store.png" #:scale 0.54]}
@tamer-figure["cd:check-stock" "“清点库存”用例细化"]{@image["stone/vsdx/cd_check_stock.png" #:scale 0.5]}

@handbook-action{用例举例: 材料登记入库}

“材料登记入库”用例与下面的“清点库存”用例差不多，都需要以可视化的形式展示存储空间和材料。
因此，我们首先关注这个过程中涉及的分析类的类图(@tamer-figure-ref{cd:store})。

分析类的存在是为方便将需求翻译成软件而增加的一个高层抽象，也是一种中间表达，
因此不需要像详细设计阶段一样给出所有细节。从该图中可以看出，“材料登记入库”用例
涉及三个分析类，Frame 是边界类，提供可视化展示的窗口；Storage 和 Apparatus
都是实体类，可以持久化到数据库；它们同时也是边界类，负责将自己画在窗体上。
在详细设计阶段，它们这两个侧面会分开实现。

更具体的说，Frame 里包含很多个 Storage 的平面图，这些平面图能够分别反应个存储空间的实际形状
和存储槽位，Apparatus 会被仓库管理员安排存放在这些槽位里。在平面图之外的地方，Frame 额外提供一块
区域可以以常规形式列出一系列选中的材料信息。

@handbook-action{用例举例: 清点库存}

“清点库存”用例与“材料登记入库”用例的主要差别在于，可能需要其他教师参与。
因此不在重复类图，而是以通信图(@tamer-figure-ref{cd:check-stock})
的形式展示其动态关系。

在目前的技术条件下，对材料的“移动”还不能自动化，必须由仓库管理员或教师完成。
教师需要做到材料用过之后回归原位，并应该做到主动更新其在存储系统中的信息。
考虑到实际情况这很难实现，转而采取一种妥协方案：由仓库管理员定期清点库存，
必要时将材料移动到原来的位置。

@handbook-scenario{行为建模}

用例模型虽然是静态结构，但它实际上表达的是一种由参与者和系统相互作用的一系列的活动序列。
每当参与者与系统发生信息交换时就会产生相应的事件，而系统对事件的反应构成行为。
不同于之前的单个用例举例，这次我们将从两个侧面来举例说明材料采购子系统中的行为模型。
@tamer-figure["sd:create-order" "“规划材料”用例时序图"]{@image["stone/vsdx/sd_create_order.png" #:scale 0.32]}
@tamer-figure["sd:order-state" "材料清单状态图"]{@image["stone/vsdx/sd_order_state.png" #:scale 0.42]}

@handbook-action{行为举例: 规划材料}

这个行为演示的是“规划材料”用例中的部分内部活动，以时序图的形式呈现(@tamer-figure-ref{sd:create-order})。
时序图画起来太费时间了，而且很难做到事无巨细。但最起码可以看到，该用例向前即为新课程研发基本完成，就差规划材料了；
向后衔接到“登记材料清单”用例，如此又产生另一个事件通知仓库管理员或主管，可以开始“核算成本”用例了。

这个时序图依旧是基于分析类给出的需求分析视角或最终用户视角。在详细设计阶段，依然还需要根据具体的类层次进一步细化。

@handbook-action{行为举例: 清单状态}

这个行为演示的是“核算材料成本”用例中的内部活动，围绕材料清单的状态展开(@tamer-figure-ref{sd:order-state})。
所有角色（教师、仓库管理员、主管）都应当有成本意识；一般来说，仓库管理员的责任最重，主管权限最高；
所有人都可以根据自己的考虑认为成本是否合理从而按需改变选材，实在没有修改余地的时候清单作废。

@;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
@handbook-reference[]
